{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";// Exportar el contexto\nexport const AuthContext=/*#__PURE__*/createContext({user:null,isAuthenticated:false,login:async()=>{},logout:()=>{}});export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const login=async token=>{try{localStorage.setItem('token',token);// Simular decodificaciÃ³n de token JWT\nconst decodedUser={id:'1',name:'Test User',role:'operator'};setUser(decodedUser);setIsAuthenticated(true);}catch(error){console.error('Login error:',error);throw error;}};const logout=()=>{localStorage.removeItem('token');setUser(null);setIsAuthenticated(false);};// Crear el valor del contexto\nconst value={user,isAuthenticated,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Hook personalizado para usar el contexto\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}